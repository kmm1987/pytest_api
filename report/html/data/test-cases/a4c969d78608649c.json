{
  "uid" : "a4c969d78608649c",
  "name" : "test_programe_info[活动项目详情]",
  "fullName" : "case.test_activityandprograme_list.Test_Programe_List#test_programe_info",
  "historyId" : "a959020d8fc15712863286c4b4628275",
  "time" : {
    "start" : 1626766101469,
    "stop" : 1626766101510,
    "duration" : 41
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'invalid cred...r not latest!' == 'ok'\n  - ok\n  + invalid credential, access_token is invalid or not latest!",
  "statusTrace" : "self = <case.test_activityandprograme_list.Test_Programe_List object at 0x000002D4F80173A0>\npageNum = '', pageSize = '', activityId = ''\nexpect = {'result_code': '0', 'result_message': 'ok'}\n\n    @pytest.mark.process\n    @pytest.mark.parametrize('pageNum,pageSize,activityId,expect',testdata['activityandprograme_list'],\n                             ids=['活动项目详情'])\n    def test_programe_info(self,pageNum,pageSize,activityId,expect):\n        self.log.info('%s{%s}' % ((sys._getframe().f_code.co_name,'------项目详情接口-----')))\n        # with allure.step('获取活动id'):\n        #     activityId = Api_Auth_Service().get_service_id()\n        with allure.step('项目详情'):\n            msg = Api_Auth_Service().api_activityandprogram_list()\n        self.log.info('%s:%s' % ((sys._getframe().f_code.co_name, '获取请求结果：%s' % msg.json())))\n        # 断言\n        # assert msg.json()[\"result_message\"] == expect['result_message']\n        # assert msg.json()['result_code'] == expect['result_code']\n        # assert 'url' in msg.json()['data']\n>       assert msg.json()[\"msg\"] == expect['result_message']\nE       AssertionError: assert 'invalid cred...r not latest!' == 'ok'\nE         - ok\nE         + invalid credential, access_token is invalid or not latest!\n\ncase\\test_activityandprograme_list.py:36: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "host",
    "time" : {
      "start" : 1626766100939,
      "stop" : 1626766100939,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'invalid cred...r not latest!' == 'ok'\n  - ok\n  + invalid credential, access_token is invalid or not latest!",
    "statusTrace" : "self = <case.test_activityandprograme_list.Test_Programe_List object at 0x000002D4F80173A0>\npageNum = '', pageSize = '', activityId = ''\nexpect = {'result_code': '0', 'result_message': 'ok'}\n\n    @pytest.mark.process\n    @pytest.mark.parametrize('pageNum,pageSize,activityId,expect',testdata['activityandprograme_list'],\n                             ids=['活动项目详情'])\n    def test_programe_info(self,pageNum,pageSize,activityId,expect):\n        self.log.info('%s{%s}' % ((sys._getframe().f_code.co_name,'------项目详情接口-----')))\n        # with allure.step('获取活动id'):\n        #     activityId = Api_Auth_Service().get_service_id()\n        with allure.step('项目详情'):\n            msg = Api_Auth_Service().api_activityandprogram_list()\n        self.log.info('%s:%s' % ((sys._getframe().f_code.co_name, '获取请求结果：%s' % msg.json())))\n        # 断言\n        # assert msg.json()[\"result_message\"] == expect['result_message']\n        # assert msg.json()['result_code'] == expect['result_code']\n        # assert 'url' in msg.json()['data']\n>       assert msg.json()[\"msg\"] == expect['result_message']\nE       AssertionError: assert 'invalid cred...r not latest!' == 'ok'\nE         - ok\nE         + invalid credential, access_token is invalid or not latest!\n\ncase\\test_activityandprograme_list.py:36: AssertionError",
    "steps" : [ {
      "name" : "项目详情",
      "time" : {
        "start" : 1626766101470,
        "stop" : 1626766101508,
        "duration" : 38
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "db0b3ed2c3c84be1",
      "name" : "log",
      "source" : "db0b3ed2c3c84be1.txt",
      "type" : "text/plain",
      "size" : 414
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "活动项目详情"
  }, {
    "name" : "tag",
    "value" : "process"
  }, {
    "name" : "parentSuite",
    "value" : "case"
  }, {
    "name" : "suite",
    "value" : "test_activityandprograme_list"
  }, {
    "name" : "subSuite",
    "value" : "Test_Programe_List"
  }, {
    "name" : "host",
    "value" : "LAPTOP-IOVUFIFT"
  }, {
    "name" : "thread",
    "value" : "27912-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.test_activityandprograme_list"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "activityId",
    "value" : "''"
  }, {
    "name" : "expect",
    "value" : "{'result_code': '0', 'result_message': 'ok'}"
  }, {
    "name" : "pageNum",
    "value" : "''"
  }, {
    "name" : "pageSize",
    "value" : "''"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "process" ]
  },
  "source" : "a4c969d78608649c.json",
  "parameterValues" : [ "''", "{'result_code': '0', 'result_message': 'ok'}", "''", "''" ]
}